@startuml

abstract class Share {
  -byte id
  -byte[] values
  -Map<Byte, byte[]> macKeys
  -Map<Byte, byte[]> macs
  -ICType informationChecking
  {static} +int VERSION
  +void setInformationChecking()
  +int getX()
  +byte getId()
  +byte[] getYValues()
  {static} -void writeMap()
  +byte[] getSerializedData()
  ~HashMap<String, String> getCommonMetaData()
  {abstract} +HashMap<String, String> getMetaData()
  +Map<Byte, byte[]> getMacs()
  +Map<Byte, byte[]> getMacKeys()
  +boolean isValid()
  -boolean checkICType()
  {abstract} +String getShareType()
  {abstract} +int getOriginalLength()
}

enum ICType {
  NONE
  RABIN_BEN_OR
  CEVALLOS
}

Share <|-- ShamirShare
Share <|-- RabinShare
Share <|-- KrawczykShare

class ShamirShare

class RabinShare {
  -int originalLength
}

class KrawczykShare {
  -int originalLength
  -int encAlgorithm
  -byte[] encKey
  +byte[] getKey()
}

@enduml